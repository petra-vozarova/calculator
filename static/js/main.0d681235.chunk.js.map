{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["summary","operands","operand","number","maxLength","Buttons","props","state","input","onClick","bind","deleteValues","calculateResult","sanitizeOperands","document","addEventListener","this","prevProps","getElementById","innerHTML","e","target","value","push","length","setState","setAttribute","eval","isNaN","parseInt","includes","console","log","className","id","React","Component","Display","class","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0d681235.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nvar summary='';\nvar operands = [];\nvar operand = '';\nvar number='';\nvar maxLength = 21;\nclass Buttons extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      summary: summary,\n      input: ''\n    }\n    this.onClick = this.onClick.bind(this)\n    this.deleteValues = this.deleteValues.bind(this)\n    this.calculateResult = this.calculateResult.bind(this)\n    this.sanitizeOperands = this.sanitizeOperands.bind(this)\n  }\n  componentDidMount(){\n    document.addEventListener('keydown',this.onClick);\n  }\n  componentDidUpdate(prevProps){\n    if (prevProps.summary !== this.state.summary ){\n      document.getElementById('display').innerHTML= this.state.summary;\n      document.getElementById('currentValue').innerHTML = this.state.input;\n    }if (prevProps.input !== this.state.input){\n      document.getElementById('display').innerHTML= this.state.summary;\n      document.getElementById('currentValue').innerHTML = this.state.input;\n    }\n  }\n  sanitizeOperands(e) {\n    number ='';\n    operand = e.target.value;\n    operands.push(e.target.value);\n    if (operands.length > 2) {\n      operand= operands[operands.length -1];\n    } else if (operands.length === 1){\n      operand = operands[0]\n    }else {\n      if (operands[1] ==='-'){\n      operand = operands[0] + operands[1]\n      } else {\n      operand = operands[1];\n      }\n    }\n   this.setState({\n      summary: summary,\n      input: operand\n    });\n     document.getElementById('currentValue').innerHTML = this.state.input;\n  }\n\n  deleteValues(){\n    number='';\n    summary ='';\n    operand ='';\n    operands =[];\n    this.setState({\n      summary: 0,\n      input: 0\n    });\n    document.getElementById('currentValue').innerHTML = this.state.summary;\n    document.getElementById('display').innerHTML= this.state.input; \n    document.getElementById('ocean').setAttribute(\"viewBox\", \"0 24 200 28\")\n  }\n\n  calculateResult(){\n    summary = eval(summary);\n    //summary = summary.toFixed(16)\n    if (isNaN(summary)){\n      summary = '0'\n    };\n    this.setState({\n      input: '',\n      summary: summary\n    });\n    document.getElementById('currentValue').innerHTML = this.state.input;\n    document.getElementById('display').innerHTML=this.state.summary;\n    if(parseInt(summary) > 50 && parseInt(summary) < 100) {\n      document.getElementById('ocean').setAttribute(\"viewBox\", \"0 24 150 28\")\n    } else if(parseInt(summary) < 50) {\n        document.getElementById('ocean').setAttribute(\"viewBox\", \"0 24 200 28\")\n    } else if(parseInt(summary) > 100 && parseInt(summary) < 200) {\n      document.getElementById('ocean').setAttribute(\"viewBox\", \"0 24 100 28\")\n    } else if(parseInt(summary) > 200 && parseInt(summary) < 500){\n      document.getElementById('ocean').setAttribute(\"viewBox\", \"0 24 50 28\")\n    } else if(parseInt(summary) > 500 && parseInt(summary) < 100){\n      document.getElementById('ocean').setAttribute(\"viewBox\", \"0 24 50 28\")\n    } else if(parseInt(summary) > 1000){\n      document.getElementById('ocean').setAttribute(\"viewBox\", \"0 24 30 28\")\n    }\n  }\n   \n  \n  onClick(e){\n    var value = e.target.value;\n    if (value === '.'){\n      if (number.includes(value)){\n        value =''\n      }\n    }\n    if (number.length >= maxLength){\n      document.getElementById('currentValue').innerHTML ='Max Length Exceeded';\n      console.log(3);\n    } else{\n    number += value;\n    summary += operand;\n    operands =[];\n    operand ='';\n    if (summary !== '0' || value !== '0'){\n      summary+= value;\n      this.setState({\n          input: value,\n          summary: summary\n      });\n    } else{\n        this.setState({\n          input:''\n        });\n    }\n    document.getElementById('currentValue').innerHTML = this.state.input;\n    document.getElementById('display').innerHTML=this.state.summary\n    }\n  }\n \n  render(){\n    return(\n        <div  className='keyboard'>\n          <button id='clear' value='ACC' onClick={this.deleteValues}>ACC</button>\n          <button id='multiply' value='*' onClick={this.sanitizeOperands}>*</button>\n          <button id='divide' value='/' onClick={this.sanitizeOperands}>/</button>\n          <button id='add' value='+' onClick={this.sanitizeOperands}>+</button>\n          <button id='subtract' value='-' onClick={this.sanitizeOperands}>-</button>\n          <button id='decimal' value='.' onClick={this.onClick}>.</button>\n          <button id='equals' value='=' onClick={this.calculateResult}>=</button>\n          <button id='nine' value='9' onClick={this.onClick}>9</button>\n          <button id='eight' value='8' onClick={this.onClick}>8</button>\n          <button id='seven' value='7' onClick={this.onClick}>7</button>\n          <button id='six' value='6' onClick={this.onClick}>6</button>\n          <button id='five' value='5' onClick={this.onClick}>5</button>\n          <button id='four' value='4' onClick={this.onClick}>4</button>\n          <button id='three' value='3' onClick={this.onClick}>3</button>\n          <button id='two' value='2' onClick={this.onClick}>2</button>\n          <button id='one' value='1' onClick={this.onClick}>1</button>\n          <button id='zero'value='0' onClick={this.onClick}>0</button>\n       </div>\n      \n    )\n  }\n}\n  const Display =(props) => { \n    return (\n    <div class= 'screen'>\n        <div>\n          <div id='display'></div>\n        </div>\n        <div id='currentValue'>\n          <p></p>\n        </div>\n    </div>\n    )\n  }\n\nconst App =(props)=> {\n    return(\n      <div id='box'>\n        <h1>My Calculator</h1>\n        <Display />\n        <div>\n          <Buttons/>\n        </div>\n      </div>\n    )\n }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}